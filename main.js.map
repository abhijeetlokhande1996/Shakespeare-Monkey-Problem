{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/monkey-problem/monkey-problem.component.html","./src/app/monkey-problem/monkey-problem.component.ts","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n","<app-header></app-header>\n<div class=\"row mt-2\">\n  <div class=\"col-12\">\n    <app-monkey-problem></app-monkey-problem>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Shakespeare Monkey Problem</h5>\n        <p class=\"card-text text-justify\">\n          If a monkey starts hitting keys at random on a keyboard for an\n          infinite amount of time, he will almost surely type a given text, such\n          as the complete works of William Shakespeare. In fact, the monkey\n          would almost surely type every possible finite text an infinite number\n          of times. However, the probability of this event is so tiny that it\n          will require more time than the estimated age of the universe, but\n          chances of occurrence of this event is not zero.\n        </p>\n        <hr />\n        <p class=\"card-text text-justify font-italic\">Proof:</p>\n        <p class=\"card-text text-justify\">\n          Suppose the typewriter has 50 keys, and the word to be typed is\n          \"banana\". If the keys are pressed randomly and independently, it means\n          that each key has an equal chance of being pressed. Then, the chance\n          that the first letter typed is \"b\" is 1/50, and the chance that the\n          second letter typed is \"a\" is also 1/50, and so on. Therefore, the\n          chance of the first six letters spelling “banana” is: (1&frasl;50) ×\n          (1&frasl;50) × (1&frasl;50) × (1&frasl;50) × (1&frasl;50) ×\n          (1&frasl;50) = (1&frasl;50)<sup>6</sup> = 1&frasl;15625000000, i.e.,\n          less than one in 15 billion. But still not zero, hence an outcome is\n          still possible.\n        </p>\n        <p class=\"card-text text-justify\">\n          So, the monkey will type the word \"banana\" 1 out of 15,625,000,000\n          times. Now let us suppose the monkey hits a key per second the amount\n          of time being taken for this event to occur in the worst case is 495\n          years approx.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-6 mx-auto\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Parameters</h5>\n            <form>\n              <div class=\"form-group\">\n                <label>Phrase</label>\n                <input\n                  class=\"form-control\"\n                  name=\"phrase\"\n                  [(ngModel)]=\"phrase\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label>Population Count</label>\n                <input\n                  class=\"form-control\"\n                  name=\"populationCount\"\n                  [(ngModel)]=\"populationCount\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label>Mutation Rate [0 to 1]</label>\n                <input\n                  class=\"form-control\"\n                  name=\"mutationRate\"\n                  [(ngModel)]=\"mutationRate\"\n                />\n              </div>\n              <button class=\"btn btn-outline-primary\" (click)=\"onGo()\">\n                Go\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mt-1\" style=\"height: 400px; overflow: scroll\">\n      <div class=\"col\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Output</h5>\n            <div *ngIf=\"opFoundFlag\">\n              <h6 class=\"text-primary\">Answer found in Generation {{ gc }}</h6>\n              <h6 class=\"text-primary\">\n                Time taken to execute: {{ timeTaken / 1000 }} second\n              </h6>\n              <table class=\"table\">\n                <tr>\n                  <th>Generation</th>\n                  <th>Most Similar Phrase</th>\n                </tr>\n                <tr *ngFor=\"let p of similarPhrases; let i = index\">\n                  <td>Generation {{ i + 1 }}</td>\n                  <td>{{ p }}</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-monkey-problem',\n  templateUrl: './monkey-problem.component.html',\n  styleUrls: ['./monkey-problem.component.css'],\n})\nexport class MonkeyProblemComponent implements OnInit {\n  phrase = 'To be or not to be that is the question!';\n  populationCount = 15000;\n  mutationRate = 0.01;\n  opFoundFlag = false;\n  similarPhrases: Array<string> = [];\n  timeTaken = 0;\n  gc = 0;\n  constructor() {}\n\n  ngOnInit(): void {}\n  argMax(array: Array<number>) {\n    return array\n      .map((x, i) => [x, i])\n      .reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n  }\n  getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  initPopulation(\n    nPopulation: number,\n    phraseLen: number,\n    randomPool: Array<number>\n  ) {\n    let population = [];\n    for (let i = 0; i < nPopulation; i++) {\n      let randomString = '';\n      for (let j = 0; j < phraseLen; j++) {\n        let randomAscii: number =\n          randomPool[Math.floor(Math.random() * randomPool.length)];\n\n        randomString += String.fromCharCode(randomAscii);\n      }\n      population.push(randomString);\n    }\n    return population;\n  }\n  computeFitnessScore(population: Array<string>, target: string) {\n    const fitnesScores: Array<number> = [];\n    for (let i = 0; i < population.length; i++) {\n      const phrase: string = population[i];\n      let score = 0;\n      for (let j = 0; j < phrase.length; j++) {\n        if (phrase[j] == target[j]) {\n          score += 1;\n        }\n      }\n      score /= target.length;\n      fitnesScores.push(score);\n    }\n    return fitnesScores;\n  }\n  crossover(father: string, mother: string) {\n    const midPoint = this.getRandomInt(0, father.length);\n    let child = father.substring(0, midPoint) + mother.substring(midPoint);\n    return child;\n  }\n  mutate(child: string, mutationRate: number, randomPool: Array<number>) {\n    for (let i = 0; i < child.length; i++) {\n      const randomNumber = Math.random();\n      if (randomNumber < mutationRate) {\n        const randomAscii =\n          randomPool[Math.floor(Math.random() * randomPool.length)];\n        child =\n          child.substring(0, i) +\n          String.fromCharCode(randomAscii) +\n          child.substring(i + 1, child.length);\n      }\n    }\n    return child;\n  }\n  evaluate(population: Array<string>, target: string) {\n    target = target.toLowerCase();\n    for (let i = 0; i < population.length; i++) {\n      let phrase = population[i].toLowerCase();\n      if (phrase == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n  onGo() {\n    const start = new Date().getTime();\n    this.similarPhrases = [];\n    let _phrase = this.phrase.toLowerCase();\n    let random_pool = [];\n    for (let i = 32; i < 127; i++) {\n      random_pool.push(i);\n    }\n    let generationCount = 0;\n    let population: Array<string> = [];\n    while (true) {\n      if (generationCount == 0) {\n        population = this.initPopulation(\n          this.populationCount,\n          this.phrase.length,\n          random_pool\n        );\n      }\n      let fitnesScores = this.computeFitnessScore(population, this.phrase);\n      const mattingPool = [];\n      for (let i = 0; i < fitnesScores.length; i++) {\n        const fs: number = fitnesScores[i];\n        const nRepeats: number = Math.trunc(fs * 100);\n        for (let j = 0; j < nRepeats; j++) {\n          mattingPool.push(population[i]);\n        }\n      }\n      // Now choose father and mother for reproduction\n      for (let idx = 0; idx < this.populationCount; idx++) {\n        const father =\n          mattingPool[Math.floor(Math.random() * mattingPool.length)];\n        const mother =\n          mattingPool[Math.floor(Math.random() * mattingPool.length)];\n        let child = this.crossover(father, mother);\n        child = this.mutate(child, this.mutationRate, random_pool);\n        population[idx] = child;\n      }\n      let breakFlag = this.evaluate(population, this.phrase);\n      if (breakFlag) {\n        console.log('Found');\n        for (const item of population) {\n          if (item.toLowerCase() == this.phrase.toLowerCase()) {\n            console.log(item.toLowerCase());\n            this.opFoundFlag = true;\n            this.similarPhrases.push(item.toLowerCase());\n            this.gc = this.similarPhrases.length;\n            break;\n          }\n        }\n        break;\n      }\n\n      this.similarPhrases.push(population[this.argMax(fitnesScores)]);\n      generationCount++;\n    }\n    this.timeTaken = new Date().getTime() - start;\n  }\n}\n","import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { MonkeyProblemComponent } from './monkey-problem/monkey-problem.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, MonkeyProblemComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Abhijeet Lokhande</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\"\n          >Home <span class=\"sr-only\">(current)</span></a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}